{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;AAAA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AA9JA;AA+JA;;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AARA;AAUA;AAMA;AACA","sources":["webpack://test/./dist/index.js"],"sourcesContent":["function runCode(){\n              \r\nconst db = wx.cloud.database({env:'mall-7gi19fir46652cb4'})\r\nlet timeOut=0\r\n  \n            \n            var Page = function(page){\n              return page\n            }\n          return Page({\n            \n            onLoad: function (options) {\n              options = this.options;\n              this.setdata({})\n            },\n            \n            parseTag(tag) {\n              let res = {\n                  type1: \"tag\",\n                  name: \"\",\n                  voidElement: false,\n                  // attrs: {},\n                  children: [],\n              };\n              let tagMatch = tag.match(/<\\/?([^\\s]+?)[/\\s>]/);\n              if (tagMatch) {\n                  // 标签名称为正则匹配的第2项\n                  res.type1 = tagMatch[1];\n                  if (tag.charAt(tag.length - 2) === \"/\") {\n                      // 判断tag字符串倒数第二项是不是 / 设置为空标签。 例子：<img/>\n                      res.voidElement = true;\n                  }\n              }\n              // 匹配所有的标签正则\n              let classList = tag.match(/\\s([^'\"/\\s><]+?)\\s*?=\\s*?(\".*?\"|'.*?')/g);\n            \n              if (classList) {\n                let style = ''\n                  for (let i = 0; i < classList.length; i++) {\n                      // 去空格再以= 分隔字符串  得到['属性名称','属性值']\n             \n                      let c = classList[i].split(\"=\");\n                      // c[1] = c[1].replace(/\\s*/g, \"\")\n                      c[0] = c[0].replace(/\\s*/g, \"\")\n                      // 循环设置属性\n                      var lengthc = 2\n                      for(lengthc; lengthc < c.length ; lengthc++){\n                        c[1] += \"=\" + c[lengthc]\n                      }\n                      let p = c[1].substring(1, c[1].length - 1)\n                      try{\n                        p = JSON.parse(c[1].substring(1, c[1].length - 1))\n                      }catch(e){\n                       \n                      }\n            \n                      if (c[1]) {\n                        if(c[0] === 'style'){\n                          style = p + style\n                          res[c[0]] = style\n                        }else{\n                          res[c[0]] = p\n                        }\n                \n                      };\n            \n                  }\n              }\n              return res;\n            },\n            \n            parse(html) {\n              var that = this;\n              let result = [];\n              let current;\n              let level = -1;\n              let arr = [];\n              let tagRE = /<[a-zA-Z\\-\\!\\/](?:\"[^\"]*\"['\"]*|'[^']*'['\"]*|[^'\">])*>/g;\n              html.replace(tagRE, function (tag, index) {\n                  // 判断第二个字符是不是'/'来判断是否open\n                  let isOpen = tag.charAt(1) !== \"/\";\n                  // 获取标签末尾的索引\n                  let start = index + tag.length;\n                  // 标签之前的文本信息\n                  let text = html.slice(start, html.indexOf(\"<\", start));\n            \n                  let parent;\n                  if (isOpen) {\n                      level++;\n                      // 设置标签属性\n                      current = that.parseTag(tag);\n                      // 判断是否为文本信息，是就push一个text children  不等于'  '\n                      if (!current.voidElement && text.trim()) {\n                          current[\"text\"] = text\n                      }\n                      // 如果我们是根用户，则推送新的基本节点\n                      if (level === 0) {\n                          result.push(current);\n                      }\n                      // 判断有没有上层，有就push当前标签\n                      parent = arr[level - 1];\n                      if (parent) {\n                          parent.children.push(current);\n                      }\n                      // console.log(current)\n                      arr[level] = current;\n                  }\n                  // 如果不是开标签，或者是空元素：</div><img>\n                  if (!isOpen || current.voidElement) {\n                      // level--\n                      level--;\n                  }\n              });\n              // console.log(result)\n              return result;\n            \n            },\n          setdata: function setdata(dictData) {\n            \n            for(var i in dictData){\n              this.data[i] = dictData[i]\n            }\n            var html = `<view class=\"container\" style=\"align-items: center; background: #FBE9A3; display: flex; flex-direction: column; height: 100%; width: 100%;\">  <view class=\"labelControl\" style=\"align-items: center; background-color: white; border-bottom: 2rpx solid #94949438; display: flex; flex-direction: row; height: 72rpx; padding: 25rpx 0rpx; position: sticky; top: 0rpx; width: 100%; z-index: 3;\">    <view class=\"showAllOrders\" id=\"showAllOrders\" bindtap=\"showAllOrders\" style=\"color: #464646de; display: flex; font-size: 25rpx; font-weight: ${typeof this.data.showAllOrdersHeight === \"object\" ? JSON.stringify( this.data.showAllOrdersHeight) : this.data.showAllOrdersHeight}; margin: 0 28rpx;\">全部订单</view>    <view class=\"unpaid\" id=\"unpaid\" bindtap=\"unpaid\" style=\"color: #464646de; display: flex; font-size: 25rpx; font-weight: ${typeof this.data.unpaidHeight === \"object\" ? JSON.stringify( this.data.unpaidHeight) : this.data.unpaidHeight}; margin: 0 28rpx;\">待付款</view>    <view class=\"paid\" id=\"paid\" bindtap=\"paid\" style=\"color: #464646de; display: flex; font-size: 25rpx; font-weight: ${typeof this.data.paidHeight === \"object\" ? JSON.stringify( this.data.paidHeight) : this.data.paidHeight}; margin: 0 28rpx;\">已付款</view>    <view class=\"labelControlLine\" style=\"background-color: #FFD633; bottom: 0; height: 4rpx; left: ${typeof this.data.leftLength === \"object\" ? JSON.stringify( this.data.leftLength) : this.data.leftLength}px; position: absolute; transition: left .4s; width: ${typeof this.data.widthLength === \"object\" ? JSON.stringify( this.data.widthLength) : this.data.widthLength}px;\"></view>  </view>  <swiper bindchange=\"bindchange\" style=\"height: 100%;width: 94%;\" current=\"${typeof this.data.navState === \"object\" ? JSON.stringify( this.data.navState) : this.data.navState}\">  <swiper-item>  <view style=\"width: 94%;display: flex;flex-direction: column;padding: 10rpx 0rpx 20rpx 0rpx;\">    ${this.data.allOrders.map((item, index) =>  ` <view style=\"background-color: white;width: 100%;display: flex;flex-direction: column;border-radius: 15rpx;color: black;margin-top: 15rpx;padding:20rpx;\" >      <view style=\"font-weight: 550;color: black;display: flex;flex-direction: row;align-items: center;padding: 5rpx 0rpx;border-bottom: 1rpx solid #94949438;padding-bottom: 20rpx;\">        <view>${typeof item.buy[\"0\"].shangpu === \"object\" ? JSON.stringify( item.buy[\"0\"].shangpu) : item.buy[\"0\"].shangpu}</view>        ${typeof item.paymentStatus === \"object\" ? JSON.stringify( item.paymentStatus) : item.paymentStatus ? `<view style=\"margin-left: auto;font-weight: 400;font-size: 24rpx;\" >已付款</view>`: `        <view style=\"margin-left: auto;color: red;font-weight: 400;font-size: 24rpx;\" wx:else>待付款</view>`}      </view>      ${item.buy.map((item, index) =>  ` <view style=\"display: flex;flex-direction: row;width: 100%;\" >        <view style=\"width: 160rpx;display: flex;flex-direction: column;margin:15rpx 15rpx 0rpx 0rpx;\">          <view style=\"height: 108rpx;background-color: #e4e4e457;border-radius: 12rpx;overflow: hidden;\">            <image src=\"${typeof item.img === \"object\" ? JSON.stringify( item.img) : item.img}\" mode=\"aspectFill\" style=\"height: 100%;width: 100%;\"></image>          </view>          <view style=\"font-size: 20rpx;color: #464646de;margin:5rpx 0rpx 0rpx 5rpx;\">          ${typeof item.name === \"object\" ? JSON.stringify( item.name) : item.name}          </view>        </view>      </view>`)}      <view style=\"display: flex;flex-direction: row;height: 40rpx;width: 100%;font-size: 24rpx;color: #464646de;margin:20rpx 0rpx 0rpx 5rpx;align-items: center;\">        <view>        下单时间： ${typeof item.orderTime === \"object\" ? JSON.stringify( item.orderTime) : item.orderTime}        </view>        <view style=\"margin-left: auto;display: flex;flex-direction: row;margin-right: 5rpx;align-items: center;\">        合计 <view style=\"font-weight: 500;font-size: 31rpx;color: black;\"> ￥${typeof item.totalPrice === \"object\" ? JSON.stringify( item.totalPrice) : item.totalPrice}</view>        </view>      </view>    </view>`)}  </view>  </swiper-item></swiper></view>`\n            this.setData({html : this.parse(html)});\n          },\n            \r\n\r\n  data: {\r\n    allOrders:[],\r\n    widthLength:0,\r\n    leftLength:0\r\n  },\r\n  obtainTop(type){\r\n    var that=this\r\n    const query = wx.createSelectorQuery()\r\n    query.select(type).boundingClientRect()\r\n    query.selectViewport().scrollOffset()\r\n    query.exec(function(res){\r\n      that.setdata({\r\n        leftLength:res[0].left,\r\n        widthLength:res[0].width,\r\n      })\r\n    })\r\n  },\r\n  showAllOrders(){\r\n    this.obtainTop('#showAllOrders')\r\n    this.setdata({\r\n      showAllOrdersHeight:550,\r\n      unpaidHeight:400,\r\n      paidHeight:400\r\n    })\r\n  },\r\n  unpaid(){\r\n    this.obtainTop('#unpaid')\r\n    this.setdata({\r\n      showAllOrdersHeight:400,\r\n      unpaidHeight:550,\r\n      paidHeight:400\r\n    })\r\n  },\r\n  paid(){\r\n    this.obtainTop('#paid')\r\n    this.setdata({\r\n      showAllOrdersHeight:400,\r\n      unpaidHeight:400,\r\n      paidHeight:550\r\n    })\r\n  },\r\n  onLoad(){\r\n    wx.getStorage({\r\n      key:'allOrders',\r\n      success: res => {\r\n        console.log(res.data.allOrders);\r\n        this.setdata({\r\n          allOrders:res.data.allOrders\r\n        })\r\n        this.showAllOrders()\r\n      }\r\n    })\r\n  },\r\n  \r\n\r\n})\n      \n      \n        }\n            window.exports = runCode;\n        \n            "],"names":[],"sourceRoot":""}